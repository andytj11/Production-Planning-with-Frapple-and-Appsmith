/* === Performance indicators â€“ one row per metric =============== */

WITH
-- 1.   --- late / material-shortage problems ---------------------
problems AS (
  SELECT
      COUNT(*) AS total_cnt,
      SUM(weight) AS total_wgt,
      COUNT(*) FILTER (WHERE bucket < NOW())                        AS cnt_before_current,
      SUM(weight) FILTER  (WHERE bucket < NOW())                    AS wgt_before_current,
      COUNT(*) FILTER (WHERE category = 'material')                 AS cnt_material_shortage,
      SUM(weight) FILTER  (WHERE category = 'material')             AS wgt_material_shortage,
      COUNT(*) FILTER (WHERE category = 'outlier')                  AS cnt_outlier,
      SUM(weight) FILTER  (WHERE category = 'outlier')              AS wgt_outlier
  FROM public.out_problem
),
-- 2.   --- demand punctuality ------------------------------------
demand AS (
  SELECT
      COUNT(*)                                   AS dem_requested,
      SUM(quantity)                              AS qty_requested,
      COUNT(*) FILTER (WHERE planned = TRUE)     AS dem_planned,
      SUM(quantity) FILTER (WHERE planned)       AS qty_planned,
      COUNT(*) FILTER (WHERE planned AND delay>0)          AS dem_planned_late,
      SUM(quantity) FILTER (WHERE planned AND delay>0)     AS qty_planned_late,
      COUNT(*) FILTER (WHERE planned AND delay=0)          AS dem_planned_ontime,
      SUM(quantity) FILTER (WHERE planned AND delay=0)     AS qty_planned_ontime,
      COUNT(*) FILTER (WHERE planned=FALSE)      AS dem_unplanned,
      SUM(quantity) FILTER (WHERE planned=FALSE) AS qty_unplanned,
      SUM(delay)                                 AS tot_lateness
  FROM public.demand
),
-- 3.   --- executed operations -----------------------------------
ops AS (
  SELECT
      COUNT(*)                AS op_cnt,
      SUM(quantity)           AS op_qty
  FROM public.operationplan
  WHERE status='completed'
),
-- 4.   --- resource usage ----------------------------------------
res_usage AS (
  SELECT
      COUNT(DISTINCT resource_id)    AS resources_used
  FROM public.operationplanresource
)

SELECT * FROM (
  /* Problem count -------------------------------------------------*/
  SELECT 'Problem count' AS category, 'before current'     AS name, cnt_before_current::text         AS value FROM problems UNION ALL
  SELECT 'Problem count', 'material shortage',                   cnt_material_shortage::text        FROM problems UNION ALL
  SELECT 'Problem count', 'outlier',                             cnt_outlier::text                  FROM problems UNION ALL

  /* Problem weight ------------------------------------------------*/
  SELECT 'Problem weight', 'before current',                 to_char(wgt_before_current,'FM999G999') FROM problems UNION ALL
  SELECT 'Problem weight', 'material shortage',              to_char(wgt_material_shortage,'FM999G999') FROM problems UNION ALL
  SELECT 'Problem weight', 'outlier',                        to_char(wgt_outlier,'FM999G999')        FROM problems UNION ALL

  /* Demand --------------------------------------------------------*/
  SELECT 'Demand', 'Requested',       dem_requested::text                 FROM demand UNION ALL
  SELECT 'Demand', 'Planned',         dem_planned::text                   FROM demand UNION ALL
  SELECT 'Demand', 'Planned late',    dem_planned_late::text              FROM demand UNION ALL
  SELECT 'Demand', 'Planned on time', dem_planned_ontime::text            FROM demand UNION ALL
  SELECT 'Demand', 'Unplanned',       dem_unplanned::text                 FROM demand UNION ALL
  SELECT 'Demand', 'Total lateness',  tot_lateness::text                  FROM demand UNION ALL

  /* Operations ----------------------------------------------------*/
  SELECT 'Operation', 'Count',        op_cnt::text                        FROM ops UNION ALL
  SELECT 'Operation', 'Quantity',     to_char(op_qty,'FM999G999')         FROM ops UNION ALL

  /* Resources -----------------------------------------------------*/
  SELECT 'Resource',  'Usage',        resources_used::text                FROM res_usage UNION ALL

  /* Material (basic example) --------------------------------------*/
  SELECT 'Material', 'Produced',      to_char(SUM(prod.quantity),'FM999G999')
  FROM public.out_resourceplan prod WHERE prod.direction='out' UNION ALL
  SELECT 'Material', 'Consumed',      to_char(SUM(cons.quantity),'FM999G999')
  FROM public.out_resourceplan cons WHERE cons.direction='in'
) AS kpi
ORDER BY category, name;
