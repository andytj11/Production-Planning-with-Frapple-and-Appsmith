{
  "backgroundColor": "#FFFFFF",
  "borderColor": "#E0DEDE",
  "borderRadius": "1.5rem",
  "borderWidth": "2",
  "bottomRow": 467,
  "boxShadow": "0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)",
  "defaultModel": "{{ { events: ScheduleUtil.events() } }}",
  "dynamicBindingPathList": [
    {
      "key": "theme"
    },
    {
      "key": "defaultModel"
    }
  ],
  "dynamicHeight": "FIXED",
  "dynamicTriggerPathList": [
    {
      "key": "onResetClick"
    }
  ],
  "events": [
    "onResetClick"
  ],
  "isCanvas": false,
  "isLoading": false,
  "isSearchWildcard": true,
  "isVisible": true,
  "key": "jd9c371lfi",
  "leftColumn": 0,
  "maxDynamicHeight": 91,
  "minDynamicHeight": 4,
  "mobileBottomRow": 332,
  "mobileLeftColumn": 0,
  "mobileRightColumn": 19,
  "mobileTopRow": 302,
  "needsErrorInfo": false,
  "onResetClick": "{{showAlert('Successfully reset!!', '');}}",
  "originalBottomRow": 467,
  "originalTopRow": 379,
  "parentColumnSpace": 17.9375,
  "parentId": "0",
  "parentRowSpace": 10,
  "renderMode": "CANVAS",
  "rightColumn": 64,
  "shouldScrollContents": true,
  "srcDoc": {
    "css": ".app {\n  height: calc(var(--appsmith-ui-height) * 1px);\n  width: calc(var(--appsmith-ui-width) * 1px);\n  justify-content: center;\n  border-radius: var(--appsmith-theme-borderRadius);\n  box-shadow: var(--appsmith-theme-boxShadow);\n  padding: 29px 25px;\n  box-sizing: border-box;\n  font-family: system-ui;\n  background: #fff;\n}\n\n.tip-container {\n  margin-bottom: 20px;\n  font-size: 14px;\n  line-height: 1.571429;\n}\n\n.tip-container h2 {\n  margin-bottom: 20px;\n  font-size: 16px;\n  font-weight: 700;\n}\n\n.tip-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n  margin-bottom: 9px;\n}\n\n.tip-header div {\n  color: #999;\n}\n\n.content {\n  white-space: pre-wrap;\n  word-break: break-word;\n  font-size: 14px;\n  line-height: 1.571429;\n}\n\n.button-container {\n  text-align: right;\n  padding-top: 4px;\n}\n\n.button-container button {\n  margin: 0 10px;\n  cursor: pointer;\n  border-radius: var(--appsmith-theme-borderRadius);\n  padding: 6px 16px;\n  background: none;\n  height: auto;\n  transition: all 0.3s ease;\n}\n\n.button-container button.primary {\n  background: var(--appsmith-theme-primaryColor) !important;\n  color: #fff;\n  border: 1px solid var(--appsmith-theme-primaryColor) !important;\n}\n\n.button-container button.reset {\n  border: 1px solid #999;\n  color: #999;\n  outline: none;\n  box-shadow: none;\n}\n\n.button-container button.reset:hover:not(:disabled) {\n  color: var(--appsmith-theme-primaryColor);\n  border-color: var(--appsmith-theme-primaryColor);\n}\n\n.button-container button.reset:disabled {\n  cursor: default;\n}",
    "html": "<link  href=\"https://cdn.jsdelivr.net/npm/fullcalendar@6.1.10/index.global.min.css\" rel=\"stylesheet\">\n<script src=\"https://cdn.jsdelivr.net/npm/fullcalendar@6.1.10/index.global.min.js\"></script>\n<div id=\"fc\"></div>     <!-- fullcalendar -->\n",
    "js": "function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\n/* -------------------------------------------------------------\n *  React + React-DOM from esm.sh\n * ----------------------------------------------------------- */\nimport React from \"https://esm.sh/react@18.2.0\";\nimport ReactDOM from \"https://esm.sh/react-dom@18.2.0\";\nimport { createRoot } from \"https://esm.sh/react-dom@18.2.0/client\";\n\n/* -------------------------------------------------------------\n *  Simple button wrapper\n * ----------------------------------------------------------- */\nconst Button = ({\n  children,\n  className = \"\",\n  ...props\n}) => /*#__PURE__*/React.createElement(\"button\", _extends({\n  className: `btn ${className}`\n}, props), children);\n\n/* -------------------------------------------------------------\n *  Tips card – reads appsmith.model.tips (array of strings)\n * ----------------------------------------------------------- */\nfunction TipsCard() {\n  const tips = appsmith.model.tips ?? [];\n  const [idx, setIdx] = React.useState(0);\n  const next = () => setIdx((idx + 1) % tips.length);\n  const reset = () => {\n    setIdx(0);\n    appsmith.triggerEvent(\"onResetClick\");\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tip-card\"\n  }, /*#__PURE__*/React.createElement(\"header\", null, /*#__PURE__*/React.createElement(\"h3\", null, \"Production Tips\"), /*#__PURE__*/React.createElement(\"span\", null, idx + 1, \" / \", tips.length)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"tip-content\"\n  }, tips[idx]), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"actions\"\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"primary\",\n    onClick: next\n  }, \"Next Tip\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"secondary\",\n    disabled: idx === 0,\n    onClick: reset\n  }, \"Reset\")));\n}\n\n/* -------------------------------------------------------------\n *  When the parent app is ready…\n * ----------------------------------------------------------- */\nappsmith.onReady(() => {\n  // /* ---------- 1. mount the React card ---------------------- */\n  // const mount = document.getElementById(\"root\");\n  // if (mount) (createRoot ?? ReactDOM.createRoot)(mount).render(<TipsCard/>);\n\n  /* ---------- 2. build the FullCalendar -------------------- */\n  const events = appsmith.model.events ?? []; // injected via model\n\n  const calendar = new FullCalendar.Calendar(document.getElementById(\"fc\"), {\n    initialView: \"timeGridWeek\",\n    initialDate: events.length ? events[0].start : undefined,\n    slotMinTime: \"06:00:00\",\n    slotMaxTime: \"22:00:00\",\n    height: \"auto\",\n    headerToolbar: {\n      left: \"prev,next today\",\n      center: \"title\",\n      right: \"timeGridDay,timeGridWeek,listWeek\"\n    },\n    allDaySlot: false,\n    events: appsmith.model.events ?? [],\n    eventColor: \"#3b82f6\",\n    // default blue\n\n    /* colour-code by product model (groupId) */\n    eventDidMount(info) {\n      switch (info.event.groupId) {\n        case \"A1\":\n          info.el.style.background = \"#7bb65b\";\n          break;\n        // green\n        case \"A5\":\n          info.el.style.background = \"#d97706\";\n          break;\n        // orange\n        default:\n          /* keep default */break;\n      }\n    }\n  });\n  calendar.render();\n\n  /* ---------- 3. keep calendar responsive ------------------ */\n  appsmith.onUiChange(() => calendar.updateSize());\n});"
  },
  "theme": "{{appsmith.theme}}",
  "topRow": 379,
  "type": "CUSTOM_WIDGET",
  "uncompiledSrcDoc": {
    "css": ".app {\n\theight: calc(var(--appsmith-ui-height) * 1px);\n\twidth: calc(var(--appsmith-ui-width) * 1px);\n\tjustify-content: center;\n\tborder-radius: var(--appsmith-theme-borderRadius);\n\tbox-shadow: var(--appsmith-theme-boxShadow);\n\tpadding: 29px 25px;\n\tbox-sizing: border-box;\n\tfont-family: system-ui;\n\tbackground: #fff;\n}\n\n.tip-container {\n\tmargin-bottom: 20px;\n\tfont-size: 14px;\n\tline-height: 1.571429;\n}\n\n.tip-container h2 {\n\tmargin-bottom: 20px;\n\tfont-size: 16px;\n\tfont-weight: 700;\n}\n\n.tip-header {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: baseline;\n\tmargin-bottom: 9px;\n}\n\n.tip-header div {\n\tcolor: #999;\n}\n\n.content {\n\twhite-space: pre-wrap;\n\tword-break: break-word;\n\tfont-size: 14px;\n\tline-height: 1.571429;\n}\n\n.button-container {\n\ttext-align: right;\n\tpadding-top: 4px;\n}\n\n.button-container button {\n\tmargin: 0 10px;\n\tcursor: pointer;\n\tborder-radius: var(--appsmith-theme-borderRadius);\n\tpadding: 6px 16px;\n\tbackground: none;\n\theight: auto;\n\ttransition: all 0.3s ease;\n}\n\n.button-container button.primary {\n\tbackground: var(--appsmith-theme-primaryColor) !important;\n\tcolor: #fff;\n\tborder: 1px solid var(--appsmith-theme-primaryColor) !important;\n}\n\n.button-container button.reset {\n\tborder: 1px solid #999;\n\tcolor: #999;\n\toutline: none;\n\tbox-shadow: none;\n}\n\n.button-container button.reset:hover:not(:disabled) {\n\tcolor: var(--appsmith-theme-primaryColor);\n\tborder-color: var(--appsmith-theme-primaryColor);\n}\n\n.button-container button.reset:disabled {\n\tcursor: default;\n}",
    "html": "<link  href=\"https://cdn.jsdelivr.net/npm/fullcalendar@6.1.10/index.global.min.css\" rel=\"stylesheet\">\n<script src=\"https://cdn.jsdelivr.net/npm/fullcalendar@6.1.10/index.global.min.js\"></script>\n<div id=\"fc\"></div>     <!-- fullcalendar -->\n",
    "js": "/* -------------------------------------------------------------\n *  React + React-DOM from esm.sh\n * ----------------------------------------------------------- */\nimport React           from \"https://esm.sh/react@18.2.0\";\nimport ReactDOM        from \"https://esm.sh/react-dom@18.2.0\";\nimport { createRoot }  from \"https://esm.sh/react-dom@18.2.0/client\";\n\n/* -------------------------------------------------------------\n *  Simple button wrapper\n * ----------------------------------------------------------- */\nconst Button = ({ children, className = \"\", ...props }) => (\n  <button className={`btn ${className}`} {...props}>{children}</button>\n);\n\n/* -------------------------------------------------------------\n *  Tips card – reads appsmith.model.tips (array of strings)\n * ----------------------------------------------------------- */\nfunction TipsCard() {\n  const tips = appsmith.model.tips ?? [];\n  const [idx, setIdx] = React.useState(0);\n\n  const next  = () => setIdx((idx + 1) % tips.length);\n  const reset = () => { setIdx(0); appsmith.triggerEvent(\"onResetClick\"); };\n\n  return (\n    <div className=\"tip-card\">\n      <header>\n        <h3>Production Tips</h3>\n        <span>{idx + 1} / {tips.length}</span>\n      </header>\n\n      <p className=\"tip-content\">{tips[idx]}</p>\n\n      <div className=\"actions\">\n        <Button className=\"primary\"  onClick={next}>Next Tip</Button>\n        <Button className=\"secondary\" disabled={idx === 0} onClick={reset}>\n          Reset\n        </Button>\n      </div>\n    </div>\n  );\n}\n\n/* -------------------------------------------------------------\n *  When the parent app is ready…\n * ----------------------------------------------------------- */\nappsmith.onReady(() => {\n\n  // /* ---------- 1. mount the React card ---------------------- */\n  // const mount = document.getElementById(\"root\");\n  // if (mount) (createRoot ?? ReactDOM.createRoot)(mount).render(<TipsCard/>);\n\n  /* ---------- 2. build the FullCalendar -------------------- */\n  const events = appsmith.model.events ?? [];            // injected via model\n\n  const calendar = new FullCalendar.Calendar(\n    document.getElementById(\"fc\"),\n    {\n      initialView   : \"timeGridWeek\",\n      initialDate   : events.length ? events[0].start : undefined,\n      slotMinTime   : \"06:00:00\",\n      slotMaxTime   : \"22:00:00\",\n      height        : \"auto\",\n      headerToolbar : {\n        left   : \"prev,next today\",\n        center : \"title\",\n        right  : \"timeGridDay,timeGridWeek,listWeek\"\n      },\n\t\t\tallDaySlot   : false,\n      events       : appsmith.model.events ?? [],\n      eventColor    : \"#3b82f6\",           // default blue\n\n      /* colour-code by product model (groupId) */\n      eventDidMount(info) {\n        switch (info.event.groupId) {\n          case \"A1\": info.el.style.background = \"#7bb65b\"; break; // green\n          case \"A5\": info.el.style.background = \"#d97706\"; break; // orange\n          default:   /* keep default */                         break;\n        }\n      }\n    }\n  );\n\n  calendar.render();\n\n  /* ---------- 3. keep calendar responsive ------------------ */\n  appsmith.onUiChange(() => calendar.updateSize());\n});\n"
  },
  "version": 1,
  "widgetId": "7p03sqx26p",
  "widgetName": "Planned_Production_ScheduleCopy"
}